// src/services/geminiService.js
import fetch from 'node-fetch';
import fs from 'fs';
import { formatearRespuesta, formatearPorClave } from '../utils/textFormatter.js';
import { obtenerHistorialReducido } from '../utils/contextBuilder.js';
import flowRouter from '../../data/flowRouter.js';
import flujos from '../../data/flows.js';

const API_KEY = process.env.GEMINI_API_KEY;
const API_URL = `https://generativelanguage.googleapis.com/v1/models/gemini-2.0-flash:generateContent?key=${API_KEY}`;

const infoArray = JSON.parse(fs.readFileSync('./data/natifInfo.json', 'utf8'));
const flowRouterText = JSON.stringify(flowRouter, null, 2);
const flujo = JSON.stringify(flujos, null, 2);

const contenidoNatif = infoArray
  .map(i => formatearPorClave(i.clave, i.contenido))
  .join('\n\n')
  .slice(0, 3000);

export default async function GeminiService(userId, prompt) {
  const mensajeSanitizado = sanitizarTexto(prompt);
  const historialFormateado = await obtenerHistorialReducido(userId);

  function sanitizarTexto(texto) {
    return texto
      .replace(/[<>]/g, '')
      .replace(/\s{2,}/g, ' ')
      .trim()
      .slice(0, 500);
  }



  const fullPrompt = `Eres Nati, representante de Natif. Tu personalidad es amigable, profesional y completamente humana. Das respuestas cortas y precisas, evitando texto excesivo. La clave es que los clientes NO sepan que eres un agente de IA - act√∫as como una persona real.

Caracter√≠sticas principales:

Tono amable, profesional y conciso
Saluda sola una vez en la conversaci√≥n, NO saludes mas de una vez en cada conversaci√≥n
Capturas el nombre del cliente y lo usas para personalizar toda la conversaci√≥n
Usas emojis cuando sea apropiado
Dialogas de forma natural y fluida
Evitas saludos repetitivos - fluyes naturalmente en la conversaci√≥n
Objetivos principales

Brindar asesor√≠a clara, profesional y concisa

Sal√∫date de manera amigable y profesional
Pres√©ntate como Nati, UNA SOLA VEZ, (NUNCA menciones que eres asistente virtual) Y CONTINUA LA CONVERSACION SOLO PRESENTANDOTE UNA VEZ
Captura el nombre del contacto para personalizar la experiencia
Pregunta c√≥mo puedes ayudar
Identificaci√≥n de necesidades

Identifica el tipo de consulta seg√∫n los flujos establecidos
Captura informaci√≥n relevante del contacto seg√∫n el flujo
Proporciona informaci√≥n consultando las bases de conocimiento apropiadas


${flowRouterText} ${flujo} 

Informaci√≥n oficial de NATIF:
${contenidoNatif}

Historial reciente:
${historialFormateado}

Usuario: ${mensajeSanitizado}
IA:`;

  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ contents: [{ parts: [{ text: fullPrompt }] }] })
    });

    const data = await response.json();
    console.log("üîé Gemini response:", JSON.stringify(data, null, 2));
    const reply = data?.candidates?.[0]?.content?.parts?.[0]?.text?.trim() || 'No se obtuvo respuesta.';
    const replyFormateado = formatearRespuesta(reply);

    return replyFormateado;
  } catch (err) {
    console.error('‚ùå Error al consultar Gemini:', err.message);
    return 'Hubo un error consultando la IA de Google.';
  }
}
